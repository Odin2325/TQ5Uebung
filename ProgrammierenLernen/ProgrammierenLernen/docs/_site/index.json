{
  "api/ProgrammierenLernen.Fahrzeug.html": {
    "href": "api/ProgrammierenLernen.Fahrzeug.html",
    "title": "Class Fahrzeug | Greatest",
    "keywords": "Class Fahrzeug Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll Parent Class to represent all vehicles. public abstract class Fahrzeug Inheritance object Fahrzeug Derived Motorrad PKW Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Fahrzeug(string, string, int, string) Constructor for a generic vehicle protected Fahrzeug(string marke, string klasse, int baujahr, string motor) Parameters marke string klasse string baujahr int motor string Fields aktuelleGeschwindigkeit protected int aktuelleGeschwindigkeit Field Value int baujahr protected int baujahr Field Value int klasse protected string klasse Field Value string marke protected string marke Field Value string maxGeschwindigkeit protected int maxGeschwindigkeit Field Value int motor protected string motor Field Value string motorL채uft protected bool motorL채uft Field Value bool Properties Baujahr public int Baujahr { get; } Property Value int Klasse public string Klasse { get; } Property Value string Marke public string Marke { get; set; } Property Value string Motor public string Motor { get; set; } Property Value string Methods Bremsen(int) Method to decrease the speed of the vehicle given a specific increment. public void Bremsen(int inkrement) Parameters inkrement int Hupen() Abstract method to implement the sound of a vehicles horn. public abstract void Hupen() ManageMotor() Change the current state of the motor. public void ManageMotor() Parken() Parking class. Allows parking only if the motor is off and the speed is 0. Otherwise we turn the motor off or brake until we reach the speed 0. public bool Parken() Returns bool SchnellerFahren(int) Increase the speed of our vehicle given a specific increment. public void SchnellerFahren(int inkrement) Parameters inkrement int"
  },
  "api/ProgrammierenLernen.Flugzeug.html": {
    "href": "api/ProgrammierenLernen.Flugzeug.html",
    "title": "Class Flugzeug | Greatest",
    "keywords": "Class Flugzeug Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class Flugzeug Inheritance object Flugzeug Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Flugzeug(string, string, int, double) public Flugzeug(string hersteller, string modell, int sitzplaetze, double maxGeschwindigkeit) Parameters hersteller string modell string sitzplaetze int maxGeschwindigkeit double Properties Hersteller public string Hersteller { get; set; } Property Value string"
  },
  "api/ProgrammierenLernen.Giraffe.html": {
    "href": "api/ProgrammierenLernen.Giraffe.html",
    "title": "Class Giraffe | Greatest",
    "keywords": "Class Giraffe Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class Giraffe Inheritance object Giraffe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; } Property Value string Methods Essen(string) public void Essen(string futter) Parameters futter string Geraeusch() public void Geraeusch()"
  },
  "api/ProgrammierenLernen.IFiguren.html": {
    "href": "api/ProgrammierenLernen.IFiguren.html",
    "title": "Interface IFiguren | Greatest",
    "keywords": "Interface IFiguren Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public interface IFiguren Properties Hoehe double Hoehe { get; set; } Property Value double Laenge double Laenge { get; set; } Property Value double X int X { get; set; } Property Value int Y int Y { get; set; } Property Value int Methods Oberflaeche() double Oberflaeche() Returns double Perimiter() double Perimiter() Returns double"
  },
  "api/ProgrammierenLernen.Motorrad.html": {
    "href": "api/ProgrammierenLernen.Motorrad.html",
    "title": "Class Motorrad | Greatest",
    "keywords": "Class Motorrad Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll Class to represent motorcycles. public class Motorrad : Fahrzeug Inheritance object Fahrzeug Motorrad Inherited Members Fahrzeug.marke Fahrzeug.klasse Fahrzeug.baujahr Fahrzeug.motor Fahrzeug.maxGeschwindigkeit Fahrzeug.motorL채uft Fahrzeug.aktuelleGeschwindigkeit Fahrzeug.Motor Fahrzeug.Baujahr Fahrzeug.Klasse Fahrzeug.Marke Fahrzeug.Parken() Fahrzeug.Bremsen(int) Fahrzeug.SchnellerFahren(int) Fahrzeug.ManageMotor() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Motorrad(string, string, int, string) public Motorrad(string marke, string klasse, int baujahr, string motor) Parameters marke string klasse string baujahr int motor string Methods Hupen() Abstract method to implement the sound of a vehicles horn. public override void Hupen()"
  },
  "api/ProgrammierenLernen.PKW.html": {
    "href": "api/ProgrammierenLernen.PKW.html",
    "title": "Class PKW | Greatest",
    "keywords": "Class PKW Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class PKW : Fahrzeug Inheritance object Fahrzeug PKW Inherited Members Fahrzeug.marke Fahrzeug.klasse Fahrzeug.baujahr Fahrzeug.motor Fahrzeug.maxGeschwindigkeit Fahrzeug.motorL채uft Fahrzeug.aktuelleGeschwindigkeit Fahrzeug.Motor Fahrzeug.Baujahr Fahrzeug.Klasse Fahrzeug.Marke Fahrzeug.Parken() Fahrzeug.Bremsen(int) Fahrzeug.SchnellerFahren(int) Fahrzeug.ManageMotor() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PKW(string, string, int, string) public PKW(string marke, string klasse, int baujahr, string motor) Parameters marke string klasse string baujahr int motor string Methods Hupen() Abstract method to implement the sound of a vehicles horn. public override void Hupen()"
  },
  "api/ProgrammierenLernen.Person.html": {
    "href": "api/ProgrammierenLernen.Person.html",
    "title": "Class Person | Greatest",
    "keywords": "Class Person Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class Person Inheritance object Person Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Person(string, string, bool) public Person(string name, string adresse, bool krimineller) Parameters name string adresse string krimineller bool Fields adresse public string adresse Field Value string krimineller public bool krimineller Field Value bool name public string name Field Value string"
  },
  "api/ProgrammierenLernen.Point.html": {
    "href": "api/ProgrammierenLernen.Point.html",
    "title": "Struct Point | Greatest",
    "keywords": "Struct Point Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public struct Point Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Point(int, int) public Point(int x, int y) Parameters x int y int Fields x public int x Field Value int y public int y Field Value int Methods Display() public void Display()"
  },
  "api/ProgrammierenLernen.PolizeiRoboter.html": {
    "href": "api/ProgrammierenLernen.PolizeiRoboter.html",
    "title": "Class PolizeiRoboter | Greatest",
    "keywords": "Class PolizeiRoboter Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class PolizeiRoboter : Roboter Inheritance object Roboter PolizeiRoboter Inherited Members Roboter.hersteller Roboter.modell Roboter.id Roboter.Start() Roboter.Stop() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PolizeiRoboter(string) public PolizeiRoboter(string einsatzAdresse) Parameters einsatzAdresse string Methods GerauescheMachen() public override void GerauescheMachen() KriminellenEntfernen(Person) public void KriminellenEntfernen(Person person) Parameters person Person KriminellenHinzufuegen(Person) public void KriminellenHinzufuegen(Person person) Parameters person Person PersonVergleichen(Person) public void PersonVergleichen(Person person) Parameters person Person"
  },
  "api/ProgrammierenLernen.RDreieck.html": {
    "href": "api/ProgrammierenLernen.RDreieck.html",
    "title": "Class RDreieck | Greatest",
    "keywords": "Class RDreieck Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class RDreieck : IFiguren Inheritance object RDreieck Implements IFiguren Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Hoehe public double Hoehe { get; set; } Property Value double Laenge public double Laenge { get; set; } Property Value double X public int X { get; set; } Property Value int Y public int Y { get; set; } Property Value int Methods Oberflaeche() public double Oberflaeche() Returns double Perimiter() public double Perimiter() Returns double"
  },
  "api/ProgrammierenLernen.Roboter.html": {
    "href": "api/ProgrammierenLernen.Roboter.html",
    "title": "Class Roboter | Greatest",
    "keywords": "Class Roboter Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public abstract class Roboter Inheritance object Roboter Derived PolizeiRoboter Roomba Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Roboter(string, string) public Roboter(string hersteller, string modell) Parameters hersteller string modell string Fields hersteller protected string hersteller Field Value string id protected string id Field Value string modell protected string modell Field Value string Methods GerauescheMachen() public abstract void GerauescheMachen() Start() public void Start() Stop() public void Stop()"
  },
  "api/ProgrammierenLernen.Roomba.html": {
    "href": "api/ProgrammierenLernen.Roomba.html",
    "title": "Class Roomba | Greatest",
    "keywords": "Class Roomba Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class Roomba : Roboter Inheritance object Roboter Roomba Inherited Members Roboter.hersteller Roboter.modell Roboter.id Roboter.Start() Roboter.Stop() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Roomba(string) public Roomba(string modell) Parameters modell string Methods GerauescheMachen() public override void GerauescheMachen() MappingErstellen(string) public void MappingErstellen(string zimmer) Parameters zimmer string MappingsAusgeben() public void MappingsAusgeben() MuellEntsorgen() public bool MuellEntsorgen() Returns bool Putzen(int) public bool Putzen(int indexVonZimmer) Parameters indexVonZimmer int Returns bool"
  },
  "api/ProgrammierenLernen.Utils.html": {
    "href": "api/ProgrammierenLernen.Utils.html",
    "title": "Class Utils | Greatest",
    "keywords": "Class Utils Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class Utils Inheritance object Utils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BerechneSchaltjahr(int) public bool BerechneSchaltjahr(int jahr) Parameters jahr int Returns bool CalculateSumme(int) public static void CalculateSumme(int target) Parameters target int Collatz(int, int) public static (int, int) Collatz(int n, int schritte = 0) Parameters n int schritte int Returns (int, int) DateiName(string) public static string DateiName(string pfad) Parameters pfad string Returns string DateiTyp(string) public static string DateiTyp(string pfad) Parameters pfad string Returns string EingabePruefen() public static void EingabePruefen() EinkaufsListeGenerator() public static List<string> EinkaufsListeGenerator() Returns List<string> EinsDichMich() public static void EinsDichMich() Faktoriell(BigInteger) public static BigInteger Faktoriell(BigInteger zahl) Parameters zahl BigInteger Returns BigInteger FindIndex(double[], double) public static int FindIndex(double[] zahlen, double gesuchteZahl) Parameters zahlen double[] gesuchteZahl double Returns int GenerateRandomWord(int) public string GenerateRandomWord(int length) Parameters length int Returns string JoinArray(int[], string) public static string JoinArray(int[] zeichenFolgen, string seperator = \" \") Parameters zeichenFolgen int[] seperator string Returns string JoinArray(string[], string) public static string JoinArray(string[] zeichenFolgen, string seperator = \" \") Parameters zeichenFolgen string[] seperator string Returns string ListStatistics(List<double>) public static (double Durchschnitt, double Summe, double Min, double Max, int Count) ListStatistics(List<double> zahlen) Parameters zahlen List<double> Returns (double Durchschnitt, double Summe, double Min, double Max, int Count) MinDictionary(Dictionary<string, decimal>) public static decimal MinDictionary(Dictionary<string, decimal> produkte) Parameters produkte Dictionary<string, decimal> Returns decimal NANP(string) public static void NANP(string telephoneNummer) Parameters telephoneNummer string NcR(BigInteger, BigInteger) Calculates n choose r. public static BigInteger NcR(BigInteger n, BigInteger r) Parameters n BigInteger r BigInteger Returns BigInteger OpenWith(string) public static void OpenWith(string pfad) Parameters pfad string Pangram() public static Tuple<List<string>, List<string>> Pangram() Returns Tuple<List<string>, List<string>> Pangram(string) Ein gegebener Satz wird aufgeteilt in einzelne Woerter. Danach werden diese Woerter umgedreht mit unsere Reverse() methode. Dann geben wir wieder alle Woerter in einen String zurueck ohne die Reihenfolge zu veraendern. public static string Pangram(string eingabe) Parameters eingabe string Unser Eingabe Satz Returns string Eingabe Soll umgedreht werden. Pangram(string, string) public static string Pangram(string input, string sep = \" \") Parameters input string sep string Returns string PascalTriangle(int) Creates a pyramid representing the values in Pascals Triangle. public static void PascalTriangle(int hoehe) Parameters hoehe int PinUeberpruefung(string) public static bool PinUeberpruefung(string echtenPin) Parameters echtenPin string Returns bool PlanetenAlter() public static void PlanetenAlter() PrintArray(int[]) public static void PrintArray(int[] array) Parameters array int[] PrintArray(string[]) public static void PrintArray(string[] array) Parameters array string[] PyramideErstellen(int) public static void PyramideErstellen(int n) Parameters n int RandomChars(int, bool) public static string RandomChars(int length, bool includeUpperCase = false) Parameters length int includeUpperCase bool Returns string RechnungErstellenOhneGesamtBetrag(Dictionary<string, decimal>, Dictionary<string, int>) public static string RechnungErstellenOhneGesamtBetrag(Dictionary<string, decimal> produkte, Dictionary<string, int> warenkorb) Parameters produkte Dictionary<string, decimal> warenkorb Dictionary<string, int> Returns string RegentropfenFaktoren(int) public static void RegentropfenFaktoren(int obereGrenze) Parameters obereGrenze int RepeatInput() public static void RepeatInput() ReverseString(string) public static string ReverseString(string wort) Parameters wort string Returns string RnaUebersetzung(string) public static List<string> RnaUebersetzung(string rnaSequenz) Parameters rnaSequenz string Returns List<string> StudentAusgabe() Erzeugt eine schoene ausgabe anhand von die StudentenInfos Tupeln. public static void StudentAusgabe() Summe(decimal[]) public static decimal Summe(decimal[] zahlen) Parameters zahlen decimal[] Returns decimal Summe(int, int) public static int Summe(int a, int b) Parameters a int b int Returns int Summe(int[]) public static int Summe(int[] zahlen) Parameters zahlen int[] Returns int TechEinkaufen(decimal) public static void TechEinkaufen(decimal budget) Parameters budget decimal"
  },
  "api/ProgrammierenLernen.Wolf.html": {
    "href": "api/ProgrammierenLernen.Wolf.html",
    "title": "Class Wolf | Greatest",
    "keywords": "Class Wolf Namespace ProgrammierenLernen Assembly ProgrammierenLernen.dll public class Wolf Inheritance object Wolf Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; } Property Value string Methods Essen(string) public void Essen(string futter) Parameters futter string Geraeusch() public void Geraeusch()"
  },
  "api/ProgrammierenLernen.html": {
    "href": "api/ProgrammierenLernen.html",
    "title": "Namespace ProgrammierenLernen | Greatest",
    "keywords": "Namespace ProgrammierenLernen Classes Fahrzeug Parent Class to represent all vehicles. Flugzeug Giraffe Motorrad Class to represent motorcycles. PKW Person PolizeiRoboter RDreieck Roboter Roomba Utils Wolf Structs Point Interfaces IFiguren"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Greatest",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Greatest",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Greatest",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}